{"ast":null,"code":"var _jsxFileName = \"/home/zno/projects/see-signage-assignment/content-player/src/ContentPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testData = ['https://imgs.xkcd.com/comics/easy_or_hard.png', 'https://imgs.xkcd.com/comics/archimedes_principle.png', 'https://imgs.xkcd.com/comics/movie_ages.png'];\nconst INTERVAL = 1000; // dev, prd 7000\n\nexport class ContentPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-player-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"content-image\",\n        src: playlist[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst _ContentPlayer = () => {\n  _s();\n\n  const [playlist, setPlaylist] = useState(testData);\n  const [index, setIndex] = useState(0); // todo useCallback\n\n  const next = useCallback(() => {\n    console.log(index, performance.now());\n    setIndex((index + 1) % 3);\n  }, []); // startLoop\n\n  useEffect(() => {\n    const id = setInterval(next, INTERVAL);\n    return () => clearInterval(id);\n  }, []);\n};\n\n_s(_ContentPlayer, \"E5bFhhfMvCc1TTV0+fmpoEqSryc=\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","testData","INTERVAL","ContentPlayer","Component","constructor","props","render","playlist","index","_ContentPlayer","setPlaylist","setIndex","next","console","log","performance","now","id","setInterval","clearInterval"],"sources":["/home/zno/projects/see-signage-assignment/content-player/src/ContentPlayer.tsx"],"sourcesContent":["import React, { ReactPropTypes } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\"\n\nconst testData = [\n    'https://imgs.xkcd.com/comics/easy_or_hard.png',\n    'https://imgs.xkcd.com/comics/archimedes_principle.png',\n    'https://imgs.xkcd.com/comics/movie_ages.png',\n]\n\nconst INTERVAL = 1000; // dev, prd 7000\n\nexport class ContentPlayer extends React.Component {\n    constructor(props: ReactPropTypes) {\n        super(props);\n    }\n\n    render () {\n        return <div className='content-player-container'>\n            <img className='content-image' src={playlist[index]}></img>\n        </div>\n    }\n}\n\n\nconst _ContentPlayer = () => {\n    const [playlist, setPlaylist] = useState<string[]>(testData);\n    const [index, setIndex] = useState<number>(0);\n\n    // todo useCallback\n    const next = useCallback(() => {\n        console.log(index, performance.now());\n        setIndex((index + 1) % 3);\n    }, []);\n\n    // startLoop\n    useEffect(() => {\n        const id = setInterval(next, INTERVAL);\n        return () => clearInterval(id);\n    }, []);\n\n\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,MAAMC,QAAQ,GAAG,CACb,+CADa,EAEb,uDAFa,EAGb,6CAHa,CAAjB;AAMA,MAAMC,QAAQ,GAAG,IAAjB,C,CAAuB;;AAEvB,OAAO,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;EAC/CC,WAAW,CAACC,KAAD,EAAwB;IAC/B,MAAMA,KAAN;EACH;;EAEDC,MAAM,GAAI;IACN,oBAAO;MAAK,SAAS,EAAC,0BAAf;MAAA,uBACH;QAAK,SAAS,EAAC,eAAf;QAA+B,GAAG,EAAEC,QAAQ,CAACC,KAAD;MAA5C;QAAA;QAAA;QAAA;MAAA;IADG;MAAA;MAAA;MAAA;IAAA,QAAP;EAGH;;AAT8C;;AAanD,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACF,QAAD,EAAWG,WAAX,IAA0BX,QAAQ,CAAWC,QAAX,CAAxC;EACA,MAAM,CAACQ,KAAD,EAAQG,QAAR,IAAoBZ,QAAQ,CAAS,CAAT,CAAlC,CAFyB,CAIzB;;EACA,MAAMa,IAAI,GAAGf,WAAW,CAAC,MAAM;IAC3BgB,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBO,WAAW,CAACC,GAAZ,EAAnB;IACAL,QAAQ,CAAC,CAACH,KAAK,GAAG,CAAT,IAAc,CAAf,CAAR;EACH,CAHuB,EAGrB,EAHqB,CAAxB,CALyB,CAUzB;;EACAV,SAAS,CAAC,MAAM;IACZ,MAAMmB,EAAE,GAAGC,WAAW,CAACN,IAAD,EAAOX,QAAP,CAAtB;IACA,OAAO,MAAMkB,aAAa,CAACF,EAAD,CAA1B;EACH,CAHQ,EAGN,EAHM,CAAT;AAMH,CAjBD;;GAAMR,c"},"metadata":{},"sourceType":"module"}